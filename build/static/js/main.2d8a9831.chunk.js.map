{"version":3,"sources":["components/Cart/CartItem.module.css","components/Shop/ProductItem.module.css","components/UI/Notification.module.css","components/Cart/CartButton.module.css","components/UI/Card.module.css","components/Cart/Cart.module.css","components/Layout/MainHeader.module.css","components/Shop/Products.module.css","components/UI/Card.js","store/cart-slice.js","components/Cart/CartItem.js","components/Cart/Cart.js","store/ui-slice.js","components/Cart/CartButton.js","components/Layout/MainHeader.js","components/Layout/Layout.js","components/Shop/ProductItem.js","components/Shop/Products.js","components/UI/Notification.js","App.js","store/cart-actions.js","store/index.js","index.js"],"names":["module","exports","Card","props","className","classes","card","children","cartSlice","createSlice","name","initialState","items","totalQuantity","totalAmount","changed","reducers","replaceDataInRedux","state","action","payload","addItemToRedux","newItem","existingItem","find","item","id","price","quantity","totalPrice","push","title","removeItemFromRedux","exisitingItem","filter","cartActions","actions","CartItem","total","dispatch","useDispatch","toFixed","itemprice","details","onClick","Cart","useSelector","cart","map","uiSlice","cartIsShown","notification","toggleCart","showNotification","status","message","uiActions","CartButton","button","badge","MainHeader","header","Layout","ProductItem","description","products","Products","Notification","specialClasses","error","success","cssClasses","initialLoading","App","ui","useEffect","a","sendRequest","fetch","response","ok","Error","json","data","dbData","console","log","method","body","JSON","stringify","updateDataToDB","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.2d8a9831.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__3odbu\",\"details\":\"CartItem_details__M0FnY\",\"quantity\":\"CartItem_quantity__1iqbV\",\"price\":\"CartItem_price__eHfSK\",\"itemprice\":\"CartItem_itemprice__7J_L0\",\"actions\":\"CartItem_actions__3X8YN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProductItem_item__2Cvid\",\"price\":\"ProductItem_price__3QAnh\",\"actions\":\"ProductItem_actions__3CJjc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__3fuul\",\"error\":\"Notification_error__3NGg9\",\"success\":\"Notification_success__PQTss\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CartButton_button__2DRPn\",\"badge\":\"CartButton_badge__3fV12\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3peUp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__34w7q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__2fu2G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"Products_products__27kuX\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <section\n      className={`${classes.card} ${props.className ? props.className : ''}`}\n    >\n      {props.children}\n    </section>\n  );\n};\n\nexport default Card;\n","import {createSlice} from '@reduxjs/toolkit'\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: {\r\n        items: [],\r\n        totalQuantity: 0,\r\n        totalAmount: 0,\r\n        changed: false\r\n    },\r\n    reducers: {\r\n        replaceDataInRedux(state, action) {\r\n            state.items = action.payload.items;\r\n            state.totalQuantity = action.payload.totalQuantity;\r\n            state. totalAmount = action.payload. totalAmount;\r\n        },\r\n        addItemToRedux(state, action) {\r\n            const newItem = action.payload\r\n            const existingItem = state.items.find(item => item.id === newItem.id)\r\n            state.totalQuantity++;\r\n            state.totalAmount = state.totalAmount + newItem.price\r\n            state.changed = true;\r\n            if (existingItem) {\r\n                existingItem.quantity++;\r\n                existingItem.totalPrice = existingItem.totalPrice + action.payload.price\r\n            } else {\r\n                state.items.push({\r\n                    id: newItem.id,\r\n                    title: newItem.title,\r\n                    quantity: newItem.quantity,\r\n                    price: newItem.price,\r\n                    totalPrice: newItem.price\r\n                })\r\n            }\r\n        },\r\n        removeItemFromRedux(state, action) {\r\n            const id = action.payload\r\n            const exisitingItem = state.items.find(item => item.id === id)\r\n            state.totalQuantity--;\r\n            state.totalAmount = state.totalAmount - exisitingItem.price;\r\n            state.changed = true;\r\n            if (exisitingItem.quantity === 1) {\r\n                state.items = state.items.filter(item => item.id !== id)\r\n            } else {\r\n                exisitingItem.quantity--;\r\n                exisitingItem.totalPrice = exisitingItem.totalPrice - exisitingItem.price\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\nexport const cartActions = cartSlice.actions\r\n\r\nexport default cartSlice","import classes from './CartItem.module.css';\nimport {useDispatch} from 'react-redux'\nimport { cartActions } from '../../store/cart-slice';\n\nconst CartItem = (props) => {\n  const { title, quantity, total, price, id } = props;\n  const dispatch = useDispatch()\n\n  const addItemToReduxHandler = () => {\n      dispatch(cartActions.addItemToRedux({\n          id,\n          price,\n          title,\n          quantity: 1\n      }))\n  }\n\n  const removeItemFromReduxHandler = () => {\n    dispatch(cartActions.removeItemFromRedux(id))\n  }\n\n  return (\n    <li className={classes.item}>\n      <header>\n        <h3>{title}</h3>\n        <div className={classes.price}>\n          ${total.toFixed(2)}{' '}\n          <span className={classes.itemprice}>(${price.toFixed(2)}/item)</span>\n        </div>\n      </header>\n      <div className={classes.details}>\n        <div className={classes.quantity}>\n          x <span>{quantity}</span>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={removeItemFromReduxHandler}>-</button>\n          <button onClick={addItemToReduxHandler}>+</button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import Card from '../UI/Card';\nimport classes from './Cart.module.css';\nimport CartItem from './CartItem';\nimport { useSelector } from 'react-redux';\n\nconst Cart = (props) => {\n  const items = useSelector(state => state.cart.items)\n\n  return (\n    <Card className={classes.cart}>\n      <h2>Your Shopping Cart</h2>\n      <ul>\n        {items.map(item => {\n          return <CartItem\n          key={item.id}\n          id = {item.id}\n          title={item.title}\n          price={item.price}\n          total={item.totalPrice}\n          quantity={item.quantity}\n        />\n        })}\n\n      </ul>\n    </Card>\n  );\n};\n\nexport default Cart;\n","import {createSlice} from '@reduxjs/toolkit'\r\n\r\nconst uiSlice = createSlice({\r\n    name: 'ui',\r\n    initialState: {\r\n        cartIsShown: false,\r\n        notification: false\r\n    },\r\n    reducers: {\r\n        toggleCart(state, actions) {\r\n            state.cartIsShown = !state.cartIsShown\r\n        },\r\n        showNotification(state, action) {\r\n            state.notification = {\r\n                status: action.payload.status,\r\n                title: action.payload.title,\r\n                message: action.payload.message,\r\n            }\r\n        }\r\n        }\r\n    }\r\n)\r\n\r\nexport const uiActions = uiSlice.actions;\r\n\r\nexport default uiSlice","import classes from './CartButton.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { uiActions } from '../../store/ui-slice';\n\nconst CartButton = (props) => {\n  const totalQuantity = useSelector(state => state.cart.totalQuantity)\n  const dispatch = useDispatch()\n\n  const showCartHandler = () => {\n    dispatch(uiActions.toggleCart())\n  }\n\n  return (\n    <button className={classes.button} onClick={showCartHandler}>\n      <span>My Cart</span>\n      <span className={classes.badge}>{totalQuantity}</span>\n    </button>\n  );\n};\n\nexport default CartButton;\n","import CartButton from '../Cart/CartButton';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes.header}>\n      <h1>ReduxCart</h1>\n      <nav>\n        <ul>\n          <li>\n            <CartButton />\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import { Fragment } from 'react';\nimport MainHeader from './MainHeader';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import Card from '../UI/Card';\nimport classes from './ProductItem.module.css';\nimport {useDispatch} from 'react-redux'\nimport { cartActions } from '../../store/cart-slice';\n\nconst ProductItem = (props) => {\n  const { title, price, description, id } = props;\n  const dispatch = useDispatch();\n\n  const addToCartHandler = () => {\n      dispatch(cartActions.addItemToRedux({\n        id,\n        price,\n        title,\n        quantity: 1\n      }))\n  }\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={addToCartHandler}>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n","import ProductItem from './ProductItem';\nimport classes from './Products.module.css';\n\nconst products = [\n  {id: 'p1', title:'Набор Филадельфия', price: 6, description:'Самый популярный набор!'},\n  {id: 'p2', title:'Набор Калифорния', price: 16, description:'Самый изысканный набор!'},\n  {id: 'p3', title:'Набор Суши Микс', price: 26, description:'Набор для гурманов!'}\n\n]\n\nconst Products = (props) => {\n  return (\n    <section className={classes.products}>\n      <h2>Buy your favorite products</h2>\n      <ul>\n        {products.map(item => {\n          return  <ProductItem key={item.id} id={item.id} price={item.price} description={item.description}\n          title={item.title}\n        />\n        })}\n\n      </ul>\n    </section>\n  );\n};\n\nexport default Products;\n","import classes from './Notification.module.css';\r\n\r\nconst Notification = (props) => {\r\n  let specialClasses = '';\r\n\r\n  if (props.status === 'error') {\r\n    specialClasses = classes.error;\r\n  }\r\n  if (props.status === 'success') {\r\n    specialClasses = classes.success;\r\n  }\r\n\r\n  const cssClasses = `${classes.notification} ${specialClasses}`;\r\n\r\n  return (\r\n    <section className={cssClasses}>\r\n      <h2>{props.title}</h2>\r\n      <p>{props.message}</p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Notification;","import {useEffect, Fragment} from 'react'\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { updateDataToDB, fetchDataFromDB } from './store/cart-actions';\nimport Notification from './components/UI/Notification'\n\nlet initialLoading = true;\n\nfunction App() {\n  const cartIsShown = useSelector(state => state.ui.cartIsShown)\n  const cart = useSelector(state => state.cart)\n  const changed = useSelector(state => state.cart.changed)\n  const notification = useSelector(state => state.ui.notification)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n      dispatch(fetchDataFromDB())\n      console.log('GET request is executed')\n  }, [dispatch])\n\n  useEffect(() => {\n\n    if (initialLoading) {\n      initialLoading = false;\n      return;\n    }\n\n    if(changed) {\n      dispatch(updateDataToDB(cart))\n      console.log('POST request is executed')\n    }\n\n  }, [cart, dispatch])\n\n  return (\n    <Fragment>\n    {notification && <Notification status={notification.status} title={notification.title}\n    message={notification.message}/>}\n    <Layout>\n      {cartIsShown && <Cart />}\n      <Products />\n    </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import { cartActions } from './cart-slice'\r\nimport {uiActions} from './ui-slice'\r\n\r\n\r\nexport const fetchDataFromDB = () => {\r\n    return async (dispatch) => {\r\n        const sendRequest = async () => {\r\n            const response = await fetch(`https://react-app3-da7ab-default-rtdb.firebaseio.com/cart.json`)\r\n            if(!response.ok) {\r\n                throw new Error('our custom error')\r\n            }\r\n            const data = await response.json();\r\n            return data;\r\n            console.log(data)\r\n        }\r\n        \r\n        try {\r\n            const dbData = await sendRequest();\r\n            dispatch(cartActions.replaceDataInRedux({\r\n                items: dbData.items,\r\n                totalAmount: dbData.totalAmount,\r\n                totalQuantity: dbData.totalQuantity\r\n            }))\r\n        } catch (err) {\r\n            dispatch(uiActions.showNotification({\r\n                title: 'error',\r\n                status: 'error',\r\n                message: 'GET request is failed'\r\n            }))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const updateDataToDB = (cart) => {\r\n    return async (dispatch) => {\r\n        dispatch(uiActions.showNotification({\r\n            title: 'pending',\r\n            status: 'pending',\r\n            message: 'POST request is pending'\r\n        }))\r\n        const sendRequest = async () => {\r\n            const response = await fetch(`https://react-app3-da7ab-default-rtdb.firebaseio.com/cart.json`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify(cart)\r\n            })\r\n            if (!response.ok) {\r\n                throw new Error(' our custom error')\r\n            }\r\n            dispatch(uiActions.showNotification({\r\n                title: 'pending',\r\n                status: 'success',\r\n                message: 'POST request is successful'\r\n            }))\r\n        }\r\n\r\n        try {\r\n            await sendRequest()\r\n        } catch (err) {\r\n            dispatch(uiActions.showNotification({\r\n                title: 'error',\r\n                status: 'error',\r\n                message: 'POST request is failed'\r\n            }))\r\n        }\r\n    }\r\n}","import { configureStore } from '@reduxjs/toolkit'\r\nimport uiSlice from './ui-slice'\r\nimport cartSlice from './cart-slice'\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n      ui: uiSlice.reducer,\r\n      cart: cartSlice.reducer\r\n  },\r\n})","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux'\nimport store from './store/index'\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n"],"sourceRoot":""}